const usernameI = document.getElementById("username");
const buttonSearch = document.getElementById("search");
const result = document.getElementById("info");
const usernameInfo = document.getElementById("usernameInfo");
const rating = document.getElementById("rating");
const suggestion = document.getElementById("suggestion");
const date = document.getElementById("date");
const containerInfo = document.querySelector(".container-info");

// Adiciona um evento de clique ao bot√£o de busca
buttonSearch.addEventListener("click", async function getUsername(e) {
  e.preventDefault(); // Impede o comportamento padr√£o do clique no bot√£o, que √© o envio do formul√°rio

  const username = usernameI.value.trim(); // Obt√©m o valor do campo de nome de usu√°rio e remove espa√ßos em branco do in√≠cio e do final

  if (username === "") {
    // Valida√ß√£o se o campo de nome de usu√°rio est√° vazio

    // Para maior seguran√ßa, o email cadastrado n√£o √© mostrado nas informa√ß√µes de login, pois somente com o nome de usu√°rio e o email em CONJUNTO √© poss√≠vel alterar as informa√ß√µes da avalia√ß√£o.

    result.style.color = "red";
    result.innerHTML = "Por favor, insira um nome de usu√°rio v√°lido.";
    rating.innerHTML = "";
    suggestion.innerHTML = "";
    containerInfo.style.display = "none";
    return; // Encerra a fun√ß√£o se o campo de nome de usu√°rio estiver vazio
  }

  try {
    let response = await fetch(`http://localhost:3000/user/${username}`);
    let userData = await response.json();

    result.innerHTML = ""; // Limpa o conte√∫do do elemento result

    if (!response.ok) {
      // Tratamento de resposta n√£o bem-sucedida (usu√°rio n√£o encontrado)
      result.style.color = "red";
      result.innerHTML = "Erro na requisi√ß√£o: Usu√°rio n√£o encontrado!";
      console.log(+response.status + " - " + response.statusText);
      rating.innerHTML = "";
      suggestion.innerHTML = "";
      containerInfo.style.display = "none"; // Esconde o cont√™iner de informa√ß√µes
      return; // Encerra a fun√ß√£o se a resposta n√£o for bem-sucedida
    }

    // Exibi√ß√£o dos dados do usu√°rio encontrados
    result.style.color = "yellow";
    result.innerHTML = "Suas informa√ß√µes..";
    containerInfo.style.display = "block"; // Exibe o cont√™iner de informa√ß√µes
    usernameInfo.innerHTML = `(${JSON.stringify(userData.username)})`;
    rating.innerHTML = `${JSON.stringify(userData.rating)}`;
    suggestion.innerHTML = `${JSON.stringify(userData.suggestion)}`;
    date.innerHTML = `${JSON.stringify(userData.date)}`;
    usernameI.value = ""; // Limpa o campo de nome de usu√°rio para a pr√≥xima busca
  } catch (error) {
    // Tratamento de erros durante a requisi√ß√£o
    if (error.message === "Failed to fetch") {
      result.style.color = "red";
      result.innerHTML =
        "Houve um erro ao buscar suas informa√ß√µes, n√£o √© voc√™, somos n√≥s. üò¢";
    } else {
      result.style.color = "red";
      result.innerHTML = "Houve um erro ao buscar suas informa√ß√µes: " + error;
    }
  }
});
